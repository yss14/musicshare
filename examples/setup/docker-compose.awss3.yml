version: "3.3"
services:
    postgres:
        image: postgres:12
        restart: unless-stopped
        volumes:
            - ./postgres-data:/var/lib/postgresql/data
        environment:
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTRGRES_DATABASE: musicshare
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    backend:
        image: docker.pkg.github.com/yss14/musicshare/backend:d92d4b0
        restart: unless-stopped
        depends_on:
            - postgres
        environment:
            NODE_ENV: production
            JWT_SECRET: somesecret
            POSTGRES_HOST: postgres
            POSTGRES_PORT: 5432
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTRGRES_DATABASE: musicshare
            FILE_STORAGE_PROVIDER: awss3
            S3_ACCESS_KEY: AKIAXWTM7XY2PLEFMIPS
            S3_SECRET_KEY: "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"
            S3_REGION: eu-central-1
            S3_BUCKET: musicshare-dockercompose-test
            FRONTEND_BASEURL: http://localhost:3000
            REST_PORT: 4000
            SETUP_USERNAME: musicshare
            SETUP_PASSWORD: musicshare
            SETUP_EMAIL: donotreply@musicshare.rocks
            SETUP_SHARE_NAME: MyShare
        ports:
            - 4000:4000

    frontend:
        image: docker.pkg.github.com/yss14/musicshare/frontend:d92d4b0
        restart: unless-stopped
        depends_on:
            - backend
        environment:
            REACT_APP_MUSICSHARE_BACKEND_URL: http://localhost:4000
        ports:
            - 3000:80
